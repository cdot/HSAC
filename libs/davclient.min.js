if(void 0===dav)var dav={};dav._XML_CHAR_MAP={"<":"&lt;",">":"&gt;","&":"&amp;",'"':"&quot;","'":"&apos;"},dav._escapeXml=function(s){return s.replace(/[<>&"']/g,function(ch){return dav._XML_CHAR_MAP[ch]})},dav.Client=function(options){var i;for(i in options)this[i]=options[i]},dav.Client.prototype={baseUrl:null,userName:null,password:null,xmlNamespaces:{"DAV:":"d"},propFind:function(url,properties,depth,headers){void 0===depth&&(depth="0"),depth=""+depth,(headers=headers||{}).Depth=depth,headers["Content-Type"]="application/xml; charset=utf-8";var namespace,body='<?xml version="1.0"?>\n<d:propfind ';for(namespace in this.xmlNamespaces)body+=" xmlns:"+this.xmlNamespaces[namespace]+'="'+namespace+'"';for(var ii in body+=">\n  <d:prop>\n",properties)if(properties.hasOwnProperty(ii)){var property=this.parseClarkNotation(properties[ii]);this.xmlNamespaces[property.namespace]?body+="    <"+this.xmlNamespaces[property.namespace]+":"+property.name+" />\n":body+="    <x:"+property.name+' xmlns:x="'+property.namespace+'" />\n'}return body+="  </d:prop>\n",body+="</d:propfind>",this.request("PROPFIND",url,headers,body).then(function(result){return"0"===depth?{status:result.status,body:result.body[0],xhr:result.xhr}:{status:result.status,body:result.body,xhr:result.xhr}}.bind(this))},_renderPropSet:function(properties){var body="  <d:set>\n   <d:prop>\n";for(var ii in properties)if(properties.hasOwnProperty(ii)){var propName,property=this.parseClarkNotation(ii),propValue=properties[ii];"d:resourcetype"!==(propName=this.xmlNamespaces[property.namespace]?this.xmlNamespaces[property.namespace]+":"+property.name:"x:"+property.name+' xmlns:x="'+property.namespace+'"')&&(propValue=dav._escapeXml(propValue)),body+="      <"+propName+">"+propValue+"</"+propName+">\n"}return body+="    </d:prop>\n",body+="  </d:set>\n"},propPatch:function(url,properties,headers){(headers=headers||{})["Content-Type"]="application/xml; charset=utf-8";var namespace,body='<?xml version="1.0"?>\n<d:propertyupdate ';for(namespace in this.xmlNamespaces)body+=" xmlns:"+this.xmlNamespaces[namespace]+'="'+namespace+'"';return body+=">\n"+this._renderPropSet(properties),body+="</d:propertyupdate>",this.request("PROPPATCH",url,headers,body).then(function(result){return{status:result.status,body:result.body,xhr:result.xhr}}.bind(this))},mkcol:function(url,properties,headers){var body="";if((headers=headers||{})["Content-Type"]="application/xml; charset=utf-8",properties){var namespace;for(namespace in body='<?xml version="1.0"?>\n<d:mkcol',this.xmlNamespaces)body+=" xmlns:"+this.xmlNamespaces[namespace]+'="'+namespace+'"';body+=">\n"+this._renderPropSet(properties),body+="</d:mkcol>"}return this.request("MKCOL",url,headers,body).then(function(result){return{status:result.status,body:result.body,xhr:result.xhr}}.bind(this))},request:function(method,url,headers,body){var self=this,xhr=this.xhrProvider();headers=headers||{},this.userName&&(headers.Authorization="Basic "+btoa(this.userName+":"+this.password));var ii,turl=url;for(ii in"undefined"!=typeof URL?turl=new URL(url,this.baseUrl).toString():/^[a-z]*:\/\//.test(turl)||(turl=this.baseUrl+turl),xhr.open(method,turl,!0),headers)xhr.setRequestHeader(ii,headers[ii]);return void 0===body?xhr.send():xhr.send(body),new Promise(function(fulfill,reject){xhr.onreadystatechange=function(){if(4===xhr.readyState){var resultBody=xhr.response;207===xhr.status&&(resultBody=self.parseMultiStatus(xhr.response)),fulfill({body:resultBody,status:xhr.status,xhr:xhr})}},xhr.ontimeout=function(){reject(new Error("Timeout exceeded"))}})},xhrProvider:function(){return new XMLHttpRequest},_parsePropNode:function(propNode){var content=null;if(propNode.childNodes&&propNode.childNodes.length>0){for(var subNodes=[],j=0;j<propNode.childNodes.length;j++){var node=propNode.childNodes[j];1===node.nodeType&&subNodes.push(node)}subNodes.length&&(content=subNodes)}return content||propNode.textContent||propNode.text||""},parseMultiStatus:function(xmlBody){for(var doc=(new DOMParser).parseFromString(xmlBody,"application/xml"),resolver=function(foo){var ii;for(ii in this.xmlNamespaces)if(this.xmlNamespaces[ii]===foo)return ii}.bind(this),responseIterator=doc.evaluate("/d:multistatus/d:response",doc,resolver,XPathResult.ANY_TYPE,null),result=[],responseNode=responseIterator.iterateNext();responseNode;){var response={href:null,propStat:[]};response.href=doc.evaluate("string(d:href)",responseNode,resolver,XPathResult.ANY_TYPE,null).stringValue;for(var propStatIterator=doc.evaluate("d:propstat",responseNode,resolver,XPathResult.ANY_TYPE,null),propStatNode=propStatIterator.iterateNext();propStatNode;){for(var propStat={status:doc.evaluate("string(d:status)",propStatNode,resolver,XPathResult.ANY_TYPE,null).stringValue,properties:{}},propIterator=doc.evaluate("d:prop/*",propStatNode,resolver,XPathResult.ANY_TYPE,null),propNode=propIterator.iterateNext();propNode;){var content=this._parsePropNode(propNode);propStat.properties["{"+propNode.namespaceURI+"}"+propNode.localName]=content,propNode=propIterator.iterateNext()}response.propStat.push(propStat),propStatNode=propStatIterator.iterateNext()}result.push(response),responseNode=responseIterator.iterateNext()}return result},parseClarkNotation:function(propertyName){var result=propertyName.match(/^{([^}]+)}(.*)$/);if(result)return{name:result[2],namespace:result[1]}}},"undefined"!=typeof module&&void 0!==module.exports&&(module.exports.Client=dav.Client);